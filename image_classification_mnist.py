# -*- coding: utf-8 -*-
"""image_classification_MNIST.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JNtC_ds9UU9Jxs6xS4v-eu5puheWQGKf
"""

import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf

(x_train,y_train),(x_test,y_test)=tf.keras.datasets.fashion_mnist.load_data()

x_train.shape

x_test.shape

x_train=x_train.astype('float32')
x_test=x_test.astype('float32')

L_grid=4
W_grid=4
fig,axes=plt.subplots(L_grid,W_grid,figsize=(25,25))
axes=axes.ravel()
n_training=len(x_train)
import random
for i in range(0,L_grid*W_grid):
  index=random.randint(0,n_training)
  axes[i].imshow(x_train[index])
  axes[i].set_title(y_train[i])
  axes[i].axis('off')

plt.subplots_adjust(hspace=0.3)

x_train=np.expand_dims(x_train,-1)
x_test=np.expand_dims(x_test,-1)

x_train.shape

x_test.shape

x_train=x_train/255
x_test=x_test/255

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D,MaxPool2D,Flatten,Dense,Dropout

model = tf.keras.Sequential([
    tf.keras.layers.Flatten(input_shape=(28, 28)),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(10)
])

model.compile(optimizer='adam',
              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
              metrics=['accuracy'])

model.fit(x_train,y_train, epochs=10)

y_pred=model.predict_classes(x_test)

y_pred

from sklearn.metrics import confusion_matrix

cm=confusion_matrix(y_test,y_pred)

import seaborn as sns
sns.heatmap(cm,annot=True)

from sklearn.metrics import  accuracy_score

accuracy_score(y_test,y_pred)

l=4
w=4
fig,axes=plt.subplots(l,w,figsize=(25,25))
axes=axes.ravel()

n_test=len(x_test)
for i in range(0,l*w):
  index=random.randint(0,n_test)
  axes[i].imshow(tf.squeeze(x_test[i]))
  axes[i].set_title('prediction class:{}\n True class:{}'.format(y_pred[i],y_test[i]))
  axes[i].axis('off')

plt.subplots_adjust(wspace=0.3)

